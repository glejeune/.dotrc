" most intersting stuff is done through breaking things
set nocompatible

filetype off
set rtp+=~/.vim/bundle/neobundle.vim
call neobundle#begin(expand('~/.vim/bundle/'))

NeoBundleFetch 'Shougo/neobundle.vim'

NeoBundle 'tpope/vim-fugitive'
NeoBundle 'altercation/vim-colors-solarized'
NeoBundle 'Lokaltog/powerline', { "rtp": "powerline/bindings/vim" }
NeoBundle 'scrooloose/syntastic'
NeoBundle 'scrooloose/nerdtree'
NeoBundle 'msanders/snipmate.vim'
NeoBundle 'klen/python-mode'
NeoBundle 'vim-scripts/L9'
NeoBundle 'greyblake/vim-preview'
NeoBundle 'vim-scripts/TailMinusF'
NeoBundle 'mattn/calendar-vim'
NeoBundle 'tpope/vim-commentary'
NeoBundle 'majutsushi/tagbar'
NeoBundle 'sjl/gundo.vim'
NeoBundle 'mileszs/ack.vim'
NeoBundle 'tclem/vim-arduino'
NeoBundle 'tpope/vim-abolish'
NeoBundle 'fatih/vim-go'
" needed by vim-notes 
NeoBundle 'xolox/vim-misc'
NeoBundle 'xolox/vim-notes'
NeoBundle 'elixir-lang/vim-elixir'
NeoBundle 'rodjek/vim-puppet'
NeoBundle 'Shougo/unite.vim'
NeoBundle 'jimenezrick/vimerl'
NeoBundle 'othree/javascript-libraries-syntax.vim'
NeoBundle 'junegunn/vim-easy-align'
NeoBundle 'lfe/vim-lfe'
NeoBundle 'kien/ctrlp.vim'
NeoBundle 'yakiang/excel.vim'
NeoBundle 'Shougo/vimproc.vim', {
\ 'build' : {
\     'windows' : 'tools\\update-dll-mingw',
\     'cygwin' : 'make -f make_cygwin.mak',
\     'mac' : 'make -f make_mac.mak',
\     'linux' : 'make',
\     'unix' : 'gmake',
\    },
\ }
NeoBundle 'rhysd/open-pdf.vim'
NeoBundle 'sjl/splice.vim'
NeoBundle 'digitaltoad/vim-jade'
NeoBundle 'kchmck/vim-coffee-script'
NeoBundle 'airblade/vim-gitgutter'

call neobundle#end()

filetype plugin indent on

NeoBundleCheck

set rtp+=~/.vim/_bundle/cscope
set rtp+=~/.vim/_bundle/difftree
set rtp+=~/.vim/_bundle/maven
set rtp+=~/.vim/_bundle/tools
set rtp+=~/.vim/_bundle/vconsole
set rtp+=~/.vim/_bundle/arduino
set rtp+=~/.vim/_bundle/wrangler


nnoremap <C-p> :Unite file_rec/async<cr>
nnoremap <space>/ :Unite grep:.<cr>
let g:unite_source_history_yank_enable = 1
nnoremap <space>y :Unite history/yank<cr>
nnoremap <space>s :Unite -quick-match buffer<cr>

let g:zipPlugin_ext = '*.zip,*.jar,*.xpi,*.ja,*.war,*.ear,*.celzip,*.oxt,*.kmz,*.wsz,*.xap,*.docx,*.docm,*.dotx,*.dotm,*.potx,*.potm,*.ppsx,*.ppsm,*.pptx,*.pptm,*.ppam,*.sldx,*.thmx,*.crtx,*.vdw,*.glox,*.gcsx,*.gqsx'

let g:pdf_convert_on_edit = 1
let g:pdf_convert_on_read = 1
